w <- x@time > start
print(w)
w2 <- x@time < end
print(w2)
logic <- w[w2]
x@time <- x@time[w]
x@value <- x@value[w]
x
}
)
s2 <- window(s , start = .5, end = .9)
s2
setMethod("window",
"Sts",
function(x, start, end) {
# cat("start: ", start, "end: ", end)
print(x@time)
w <- x@time > start
print(w)
w2 <- x@time < end
print(w2)
logic <- w[w2]
print(logic)
x@time <- x@time[w]
x@value <- x@value[w]
x
}
)
s2 <- window(s , start = .5, end = .9)
s2
setMethod("window",
"Sts",
function(x, start, end) {
# cat("start: ", start, "end: ", end)
# print(x@time)
w <- x@time > start
# print(w)
w2 <- x@time < end
# print(w2)
logic <- w[w2]
print(logic)
x@time <- x@time[w]
x@value <- x@value[w]
x
}
)
s2 <- window(s , start = .5, end = .9)
setMethod("window",
"Sts",
function(x, start, end) {
# cat("start: ", start, "end: ", end)
print(x@time)
w <- x@time > start
# print(w)
w2 <- x@time < end
# print(w2)
logic <- w[w2]
print(logic)
x@time <- x@time[w]
x@value <- x@value[w]
x
}
)
s2 <- window(s , start = .5, end = .9)
setMethod("window",
"Sts",
function(x, start, end) {
# # cat("start: ", start, "end: ", end)
# print(x@time)
# w <- x@time > start
# # print(w)
# w2 <- x@time < end
# # print(w2)
# logic <- w[w2]
# print(logic)
# x@time <- x@time[w]
# x@value <- x@value[w]
# x
w <- start < x@time < end
w
}
)
setMethod("window",
"Sts",
function(x, start, end) {
# # cat("start: ", start, "end: ", end)
# print(x@time)
# w <- x@time > start
# # print(w)
# w2 <- x@time < end
# # print(w2)
# logic <- w[w2]
# print(logic)
# x@time <- x@time[w]
# x@value <- x@value[w]
# x
w <- start < x@time && x@time < end
w
}
)
s2 <- window(s , start = .5, end = .9)
s2
setMethod("window",
"Sts",
function(x, start, end) {
# # cat("start: ", start, "end: ", end)
# print(x@time)
# w <- x@time > start
# # print(w)
# w2 <- x@time < end
# # print(w2)
# logic <- w[w2]
# print(logic)
# x@time <- x@time[w]
# x@value <- x@value[w]
# x
w <- start < x@time
w
}
)
s2 <- window(s , start = .5, end = .9)
s2
setMethod("window",
"Sts",
function(x, start, end) {
# # cat("start: ", start, "end: ", end)
# print(x@time)
# w <- x@time > start
# # print(w)
# w2 <- x@time < end
# # print(w2)
# logic <- w[w2]
# print(logic)
# x@time <- x@time[w]
# x@value <- x@value[w]
# x
print(x@time)
w <- start < x@time
w
}
)
s2 <- window(s , start = .5, end = .9)
s2
setMethod("window",
"Sts",
function(x, start, end) {
# cat("start: ", start, "end: ", end)
print(x@time)
w <- x@time > start
x@time <- x@time[w]
x@value <- x@value[w]
x
w2 <- x@time < end
x@time <- x@time[w2]
x@value <- x@value[w2]
x
}
)
s2 <- window(s , start = .5, end = .9)
s2
s2 <- window(s , start = .5, end = 2)
s2
setMethod("window",
"Sts",
function(x, start, end) {
# cat("start: ", start, "end: ", end)
print(x@time)
w1 <- x@time > start
x@time <- x@time[w1]
x@value <- x@value[w1]
w2 <- x@time < end
x@time <- x@time[w2]
x@value <- x@value[w2]
x
}
)
s2 <- window(s , start = .5, end = 2)
s2
setMethod("window",
"Sts",
function(x, start, end) {
w1 <- x@time > start
x@time <- x@time[w1]
x@value <- x@value[w1]
w2 <- x@time < end
x@time <- x@time[w2]
x@value <- x@value[w2]
x
}
)
s2 <- window(s , start = .5, end = 2)
s2
s2 <- window(s , start = .5, end = 1.4)
s2
setMethod("window",
"Sts",
function(object, start, end) {
w1 <- object@time > start
object@time <- object@time[w1]
object@value <- object@value[w1]
w2 <- object@time < end
object@time <- object@time[w2]
object@value <- object@value[w2]
x
}
)
setMethod("window",
"Sts",
function(object, start, end) {
w1 <- object@time > start
object@time <- object@time[w1]
object@value <- object@value[w1]
w2 <- object@time < end
object@time <- object@time[w2]
object@value <- object@value[w2]
object
}
)
setMethod("select",
"Sts",
function(object) {
}
)
setMethod("window",
"Sts",
function(object, start, end) {
w1 <- object@time > start
object@time <- object@time[w1]
object@value <- object@value[w1]
w2 <- object@time < end
object@time <- object@time[w2]
object@value <- object@value[w2]
object
}
)
setMethod("select",
"Sts",
function(object, cond) {
print(cond)
}
)
setGeneric("select")
setGeneric("select", function(standardGeneric(){}))
setGeneric("select", function(standardGeneric))
setGeneric("select", function(standardGeneric){})
setMethod("select",
"Sts",
function(object, cond) {
print(cond)
}
)
setGeneric("select", function(){standardGeneric("select")}
setMethod("select",
"Sts",
function(object, cond) {
print(cond)
}
)
s3 <- select (s , value > -12 & value < -5) # selekcja po warunku logicznym
setMethod("simplify",
"Sts",
function(object) {
}
)
# SPRAWDZENIE METOD
# Tworzenie prostego szeregu czasoweg
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
grid()
dev.off()
# Bardziej skomplikowany wykres z wykorzystaniem proponowanych metod
pdf(file = "fig2.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
s1 <- s[1:5] # selekcja po numerze obserwacji
s1
lines(s1, col = "red", lwd = 2)
points(s1, col = "red", pch = 20, cex = 1.3)
s2 <- window(s , start = .5) # selekcja po czasie
lines(s2 , col="magenta" , lwd=2)
points(s2, col="magenta", pch = 20, cex = 1.3)
s3 <- select (s , value > -12 & value < -5) # selekcja po warunku logicznym
points(s3, col = "green", pch = 20, cex = 1.3)
s4 <- simplify(s)
lines(s4, col = "black", lty = "dashed")
dev.off()
setGeneric("select", function(){standardGeneric("select")})
setGeneric("select", function(object){standardGeneric("select")})
setMethod("select",
"Sts",
function(object, cond) {
print(cond)
}
)
setGeneric("select", function(object, cond){standardGeneric("select")})
setMethod("select",
"Sts",
function(object, cond) {
print(cond)
}
)
s3 <- select (s , value > -12 & value < -5) # selekcja po warunku logicznym
setGeneric("select", function(object, value){standardGeneric("select")})
setMethod("select",
"Sts",
function(object, value) {
print(cond)
}
)
s3 <- select (s , value > -12 & value < -5) # selekcja po warunku logicznym
setMethod("select",
"Sts",
function(object, value) {
print(value)
}
)
s3 <- select (s , value > -12 & value < -5) # selekcja po warunku logicznym
setGeneric("select", function(object, ...){standardGeneric("select")})
setMethod("select",
"Sts",
function(object, ...) {
print(value)
}
)
s3 <- select (s , value > -12 & value < -5) # selekcja po warunku logicznym
setGeneric("select", function(object, cond){standardGeneric("select")})
setMethod("select",
"Sts",
function(object, cond) {
print(value)
}
)
s3 <- select (s , value > -12 & value < -5) # selekcja po warunku logicznym
setMethod("select",
"Sts",
function(object, cond) {
print(cond)
}
)
s3 <- select (s , value > -12 & value < -5) # selekcja po warunku logicznym
setMethod("select",
"Sts",
function(object, cond) {
}
)
s3 <- select (s , value > -12 & value < -5) # selekcja po warunku logicznym
s3
setMethod("select",
"Sts",
function(object, cond) {
print(cond)
}
)
s3 <- select (s , value > -12 & value < -5) # selekcja po warunku logicznym
setGeneric("select", function(object, cond, value){standardGeneric("select")})
setMethod("select",
"Sts",
function(object, cond, value) {
print(cond)
}
)
s3 <- select (s , value > -12 & value < -5) # selekcja po warunku logicznym
print(object@value)
setMethod("select",
"Sts",
function(object, cond, value) {
print(object@value)
}
)
s3 <- select (s , value > -12 & value < -5) # selekcja po warunku logicznym
s3 <- select (s , value > -12 & value < -1) # selekcja po warunku logicznym
setMethod("select",
"Sts",
)
s3 <- select (s , value > -12 & value < -1) # selekcja po warunku logicznym
setMethod("select",
"Sts",
function(object, cond) {
value <- object@value
}
)
s3 <- select (s , value > -12 & value < -1) # selekcja po warunku logicznym
s3
print(cond)
setMethod("select",
"Sts",
function(object, cond) {
value <- object@value
print(cond)
print(value)
}
)
s3 <- select (s , value > -12 & value < -1) # selekcja po warunku logicznym
setMethod("select",
"Sts",
function(object, cond) {
value <- object@value
# print(cond)
print(value)
}
)
s3 <- select (s , value > -12 & value < -1) # selekcja po warunku logicznym
setMethod("select",
"Sts",
function(object, ...) {
value <- object@value
# print(cond)
print(value)
}
)
setGeneric("select", function(object, ...){standardGeneric("select")})
setMethod("select",
"Sts",
function(object, ...) {
value <- object@value
# print(cond)
print(value)
}
)
s3 <- select (s , value > -12 & value < -1) # selekcja po warunku logicznym
setMethod("select",
"Sts",
function(object, ...) {
value <- object@value
# print(cond)
print(...)
}
)
setMethod("select",
"Sts",
function(object, ...) {
value <- object@value
# print(cond)
print(...)
}
)
s3 <- select (s , value > -12 & value < -1) # selekcja po warunku logicznym
rm(list = ls())
sts <- setClass("Sts",
slots = c(time = "numeric",
value = "numeric"),
contains = "data.frame")
setMethod("initialize",
signature = "Sts",
definition = function(.Object, time, value){
if(length(time) == length(value)){
.Object@time <- time
.Object@value <- value
return(.Object)
} else {
stop("'time' and 'value' should have the same number of elements")
}
}
)
n <- 25
s <- sts(time = sort(rnorm(n)), value = cumsum(rnorm(n)))
s
setMethod("plot",
"Sts",
function(object,x, y, ...) {
x <- object@time
y <- object@value
plot(x, y, xlab = "time", ylab = "value", ...)
}
)
setMethod("lines",
"Sts",
definition = function(object, x, y, ...) {
x <- object@time
y <- object@value
plot(x, y, xlab = "time", ylab = "value")
lines(x, y, xlab = "time", ylab = "value", type = "l", ...)
}
)
setMethod("points",
"Sts",
function(object, x, y, ...) {
x <- object@time
y <- object@value
plot(x, y, xlab = "time", ylab = "value")
points(x, y, ...)
}
)
setMethod("[",
"Sts",
function(object ,x, i) { #doesn't work without 'i' which is never used?!
object@value <- object@value[x]
object@time <- object@time[x]
object
}
)
setMethod("window",
"Sts",
function(x, start, end) {
w1 <- x@time > start
x@time <- x@time[w1]
x@value <- x@value[w1]
w2 <- x@time < end
x@time <- x@time[w2]
x@value <- x@value[w2]
x
}
)
setGeneric("select", function(object, ...){standardGeneric("select")})
setMethod("select",
"Sts",
function(object, ...) {
value <- object@value
# print(cond)
print(...)
}
)
s3 <- select (s , value > -12 & value < -1) # selekcja po warunku logicznym
