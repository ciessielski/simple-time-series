} else {
stop("'time' and 'value' should have the same number of elements")
}
}
)
n <- 100
s <- sts(time = sort(rnorm(n)), value = cumsum(rnorm(n)))
s
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
setMethod("plot",
"Sts",
function(object) {
cat("no dziala plot")
}
)
isGeneric(plot)
isGeneric("plot")
setMethod("plot",
"Sts",
definition = function(object) {
cat("no dziala plot")
}
)
setMethod("plot",
signature = "Sts",
definition = function(object) {
cat("no dziala plot")
}
)
sts <- setClass("Sts",
slots = c(time = "numeric",
value = "numeric"),
contains = "data.frame")
setMethod("initialize",
signature = "Sts",
definition = function(.Object, time, value){
if(length(time) == length(value)){
.Object@time <- time
.Object@value <- value
# .Object <- as.data.frame()
# .Object <- sts(c(0, 1, 2, 3))
# .Object$t <- as.vector(time)
# .Object$v <- as.vector(value)
return(.Object)
} else {
stop("'time' and 'value' should have the same number of elements")
}
}
)
setMethod("plot",
signature = "Sts",
definition = function(object) {
cat("no dziala plot")
}
)
setMethod("plot",
signature = "Sts",
definition = function() {
cat("no dziala plot")
}
)
setMethod("lines",
"Sts",
definition = function(object) {
}
)
setMethod("points",
"Sts",
function(object) {
}
)
rm(list = ls())
sts <- setClass("Sts",
slots = c(time = "numeric",
value = "numeric"),
contains = "data.frame")
setMethod("initialize",
signature = "Sts",
definition = function(.Object, time, value){
if(length(time) == length(value)){
.Object@time <- time
.Object@value <- value
# .Object <- as.data.frame()
# .Object <- sts(c(0, 1, 2, 3))
# .Object$t <- as.vector(time)
# .Object$v <- as.vector(value)
return(.Object)
} else {
stop("'time' and 'value' should have the same number of elements")
}
}
)
setMethod("plot",
signature = "Sts",
definition = function() {
cat("no dziala plot")
}
)
setMethod("plot",
signature = "Sts",
definition = function(x, y) {
cat("no dziala plot")
}
)
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
n <- 100
s <- sts(time = sort(rnorm(n)), value = cumsum(rnorm(n)))
s
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
setMethod("plot",
signature = "Sts",
definition = function(object, x, y) {
cat("no dziala plot")
}
)
setMethod("plot",
signature = "Sts",
definition = function(object, x, y) {
cat("no dziala plot")
x <- object@time
y <- object@value
}
)
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
plot(s)
setMethod("plot",
signature = "Sts",
definition = function(object, x, y, type, pch) {
cat("no dziala plot")
x <- object@time
y <- object@value
}
)
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
setMethod("plot",
signature = "Sts",
definition = function(object, x, y, type, pch, cex, col) {
cat("no dziala plot")
x <- object@time
y <- object@value
}
)
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
rm(list = ls())
require(pryr)
sts <- setClass("Sts",
slots = c(time = "numeric",
value = "numeric"),
contains = "data.frame")
eval(sts)
getClass("Sts")
setMethod("initialize",
signature = "Sts",
definition = function(.Object, time, value){
if(length(time) == length(value)){
.Object@time <- time
.Object@value <- value
# .Object <- as.data.frame()
# .Object <- sts(c(0, 1, 2, 3))
# .Object$t <- as.vector(time)
# .Object$v <- as.vector(value)
return(.Object)
} else {
stop("'time' and 'value' should have the same number of elements")
}
}
)
n <- 100
s <- sts(time = sort(rnorm(n)), value = cumsum(rnorm(n)))
s
isGeneric("plot")
setMethod("plot",
signature = "Sts",
definition = function(object, x, y, type, pch, cex, col) {
cat("no dziala plot")
x <- object@time
y <- object@value
}
)
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
grid()
dev.off()
?plot
?plot
setMethod("plot",
signature = "Sts",
definition = function(object, x, y, type, pch, cex, col) {
cat("no dziala plot")
x <- object@time
y <- object@value
return()
}
)
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
grid()
setMethod("plot",
signature = "Sts",
definition = function(object, x, y, type, pch, cex, col) {
cat("no dziala plot")
x <- object@time
y <- object@value
plot.new()
}
)
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
grid()
dev.off()
sts <- setClass("Sts",
slots = c(time = "numeric",
value = "numeric"),
contains = "data.frame")
eval(sts)
getClass("Sts")
setMethod("initialize",
signature = "Sts",
definition = function(.Object, time, value){
if(length(time) == length(value)){
.Object@time <- time
.Object@value <- value
# .Object <- as.data.frame()
# .Object <- sts(c(0, 1, 2, 3))
# .Object$t <- as.vector(time)
# .Object$v <- as.vector(value)
return(.Object)
} else {
stop("'time' and 'value' should have the same number of elements")
}
}
)
sts <- setClass("Sts",
slots = c(time = "numeric",
value = "numeric"),
contains = "data.frame")
eval(sts)
getClass("Sts")
setMethod("initialize",
signature = "Sts",
definition = function(.Object, time, value){
if(length(time) == length(value)){
.Object@time <- time
.Object@value <- value
# .Object <- as.data.frame()
# .Object <- sts(c(0, 1, 2, 3))
# .Object$t <- as.vector(time)
# .Object$v <- as.vector(value)
return(.Object)
} else {
stop("'time' and 'value' should have the same number of elements")
}
}
)
n <- 100
s <- sts(time = sort(rnorm(n)), value = cumsum(rnorm(n)))
s
s@time
setMethod("plot",
signature = "Sts",
definition = function(object, x, y, type, pch, cex, col) {
cat("no dziala plot")
x <- object@time
y <- object@value
type <- type
pch <- pch
cex <- cex
col <- col
plot.new()
}
)
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
grid()
dev.off()
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
grid()
dev.off()
isGeneric("plot")
setMethod("plot",
signature = "Sts",
definition = function(object, x, y, type, pch, cex, col) {
cat("no dziala plot",object@time )
x <- object@time
y <- object@value
# type <- type
# pch <- pch
# cex <- cex
# col <- col
plot.new()
}
)
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
setMethod("plot",
signature = "Stsx",
definition = function(object, x, y, type, pch, cex, col) {
cat("no dziala plot",object@time )
x <- object@time
y <- object@value
# type <- type
# pch <- pch
# cex <- cex
# col <- col
plot.new()
}
)
setMethod("plot",
signature = "Sts",
definition = function(object, x, y) {
cat("no dziala plot",object@time )
x <- object@time
y <- object@value
# type <- type
# pch <- pch
# cex <- cex
# col <- col
plot.new()
}
)
setMethod("plot",
signature = "Sts",
definition = function(object, x, y) plot(x@y) {
cat("no dziala plot",object@time )
x <- object@time
y <- object@value
# type <- type
# pch <- pch
# cex <- cex
# col <- col
plot.new()
}
)
setMethod("plot", signature(x="track", y="missing"),
function(x,  y, ...) plot(slot(x, "x"), slot(x, "y"), ...)
)
setMethod("plot", signature(y = "track"),
function(x, y, ...) plot(x, slot(y, "y"), ...)
)
setMethod("plot", "track",
function(x, y, ...) plot(slot(x, "y"), y,  ...)
)
t1 <- new("track", x=1:20, y=(1:20)^2)
setMethod("plot",
signature = "Sts",
definition = function(object) {
cat("no dziala plot",object@time )
x <- object@time
y <- object@value
plot.new()
}
)
setMethod("plot",
signature = "Sts",
definition = function(x=object@time, y=object@value) {
cat("no dziala plot",object@time )
x <- object@time
y <- object@value
plot.new()
}
)
setMethod("plot",
signature = "Sts",
definition = function(x=object@time, y=object@value) {
cat("no dziala plot",object@time )
# x <- object@time
# y <- object@value
plot(x,y)
# plot.new()
}
)
rm(list = ls())
require(pryr)
sts <- setClass("Sts",
slots = c(time = "numeric",
value = "numeric"),
contains = "data.frame")
eval(sts)
getClass("Sts")
setMethod("initialize",
signature = "Sts",
definition = function(.Object, time, value){
if(length(time) == length(value)){
.Object@time <- time
.Object@value <- value
return(.Object)
} else {
stop("'time' and 'value' should have the same number of elements")
}
}
)
n <- 100
s <- sts(time = sort(rnorm(n)), value = cumsum(rnorm(n)))
s
setMethod("plot",
signature = "Sts",
definition = function(x=object@time, y=object@value) {
cat("no dziala plot",object@time )
# x <- object@time
# y <- object@value
plot(x,y)
# plot.new()
}
)
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
setMethod("plot",
signature = "Sts",
definition = function(object, type, pch, cex, col) {
cat("no dziala plot",object@time )
# x <- object@time
# y <- object@value
plot(object@time, object@value)
# plot.new()
}
)
setMethod("plot",
signature = "Sts",
definition = function(object,x, y, type, pch, cex, col) {
cat("no dziala plot",object@time )
# x <- object@time
# y <- object@value
plot(object@time, object@value)
# plot.new()
}
)
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
grid()
dev.off()
setMethod("plot",
signature = "Sts",
definition = function(object,x, y, ...) {
cat("no dziala plot",object@time )
# x <- object@time
# y <- object@value
plot(object@time, object@value)
# plot.new()
}
)
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
grid()
dev.off()
setMethod("plot",
signature = "Sts",
definition = function(object,x, y, ...) {
cat("no dziala plot",object@time )
# x <- object@time
# y <- object@value
plot(object@time, object@value, ...)
# plot.new()
}
)
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
grid()
dev.off()
setMethod("plot",
signature = "Sts",
definition = function(object, ...) {
# x <- object@time
# y <- object@value
plot(object@time, object@value, ...)
# plot.new()
}
)
setMethod("plot",
signature = "Sts",
definition = function(object,x, y, ...) {
cat("no dziala plot")
x <- object@time
y <- object@value
plot(x, y, xlab="time", ylab="value" ...)
# plot.new()
}
)
setMethod("plot",
signature = "Sts",
definition = function(object,x, y, ...) {
cat("no dziala plot")
x <- object@time
y <- object@value
plot(x, y, xlab="time", ylab="value", ...)
# plot.new()
}
)
setMethod("plot",
signature = "Sts",
definition = function(object,x, y, ...) {
cat("no dziala plot")
x <- object@time
y <- object@value
plot(x, y, xlab="time", ylab="value", ...)
}
)
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
grid()
dev.off()
setMethod("plot",
"Sts",
function(object,x, y, ...) {
x <- object@time
y <- object@value
plot(x, y, xlab="time", ylab="value", ...)
}
)
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
grid()
dev.off()
