}
)
setMethod("[",
"Sts",
function(object, i, j, drop, ...) {
object[i]
}
)
setMethod("[",
"Sts",
function(object, i, j, drop) {
object[i]
}
)
setMethod("[",
"Sts",
function(x = object, i = 0, j=0, drop = TRUE) {
object[i]
}
)
s1 <- s[1:20] # selekcja po numerze obserwacji
setMethod("[",
"Sts",
function(x, i = 0, j = 0, drop = TRUE) {
x[i]
}
)
s1 <- s[1:20] # selekcja po numerze obserwacji
s1
setMethod("[",
"Sts",
function(x, i, j, drop = TRUE) {
x[i:j]
}
)
s1 <- s[1:20] # selekcja po numerze obserwacji
s1
setMethod("[",
"Sts",
function(x, i, j, drop = TRUE) {
cat{"tedad"}
}
)
)
setMethod("[",
"Sts",
function(x, i, j, drop = TRUE) {
cat("tedad")
}
)
s1 <- s[1:20] # selekcja po numerze obserwacji
x <- x[i:j]
setMethod("[",
"Sts",
function(x, i, j, drop = TRUE) {
cat("tedad")
x <- x[i:j]
}
)
s1 <- s[1:20] # selekcja po numerze obserwacji
s1 <- s[1:20] # selekcja po numerze obserwacji
s1
sts <- setClass("Sts",
slots = c(time = "numeric",
value = "numeric"),
contains = "data.frame")
eval(sts)
getClass("Sts")
setMethod("initialize",
signature = "Sts",
definition = function(.Object, time, value){
if(length(time) == length(value)){
.Object@time <- time
.Object@value <- value
return(.Object)
} else {
stop("'time' and 'value' should have the same number of elements")
}
}
)
n <- 100
s <- sts(time = sort(rnorm(n)), value = cumsum(rnorm(n)))
s
setMethod("plot",
"Sts",
function(object,x, y, ...) {
x <- object@time
y <- object@value
plot(x, y, xlab = "time", ylab = "value", ...)
}
)
setMethod("lines",
"Sts",
definition = function(object, x, y, ...) {
x <- object@time
y <- object@value
plot(x, y, xlab = "time", ylab = "value")
lines(x, y, xlab = "time", ylab = "value", type = "l", ...)
}
)
setMethod("points",
"Sts",
function(object, x, y, ...) {
x <- object@time
y <- object@value
plot(x, y, xlab = "time", ylab = "value")
points(x, y, ...)
}
)
setMethod("window",
"Sts",
function(object) {
}
)
setMethod("select",
"Sts",
function(object) {
}
)
setMethod("simplify",
"Sts",
function(object) {
}
)
pdf (file = "fig1.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
grid()
dev.off()
pdf (file = "fig1b.pdf")
lines(s, col = "red", lwd = 2)
grid()
dev.off()
pdf (file = "fig1c.pdf")
points(s, col = "red", pch = 20, cex = 1.3)
grid()
dev.off()
pdf(file = "fig2.pdf")
plot(s, type = "o", pch = 20, cex = 1.2, col = rgb(0, 0, 1, .5))
s1 <- s[1:20] # selekcja po numerze obserwacji
setMethod("[",
"Sts",
function(x, i, j, drop = TRUE) {
cat("yo")
x <- x[i:j]
}
)
s1 <- s[1:20] # selekcja po numerze obserwacji
n <- 10
s <- sts(time = sort(rnorm(n)), value = cumsum(rnorm(n)))
s
setMethod("[",
"Sts",
function(x, i, j, drop = TRUE) {
cat("yo", x)
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
s1
setMethod("[",
"Sts",
function(x, i, j, drop = TRUE) {
cat("yo", x)
class(x)
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
setMethod("[",
"Sts",
function(x, i, j, drop = TRUE) {
cat("yo", x)
class(x)
is.na(x)
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
s1
methods
functionBody("[")
View(mean)
View([)
getMethod(mean)
getMethod("mean")
getMethod{"show"}
getMethod(show)
require(raster)
edit(mean)
setMethod("[",
"Sts",
function(x, i, j, drop) {
cat("yo", x)
class(x)
is.na(x)
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
s1
s
setMethod("[",
"Sts",
function(x, i, j, drop) {
cat("yo", x)
class(x)
is.na(x)
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
s1
setMethod("[",
"Sts",
function(x, i, drop) {
cat("yo", x)
class(x)
is.na(x)
}
)
setMethod("[",
"Sts",
function(x, i) {
cat("yo", x)
class(x)
is.na(x)
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
s1
s1
rm(list = ls())
require(pryr)
sts <- setClass("Sts",
slots = c(time = "numeric",
value = "numeric"),
contains = "data.frame")
eval(sts)
getClass("Sts")
setMethod("initialize",
signature = "Sts",
definition = function(.Object, time, value){
if(length(time) == length(value)){
.Object@time <- time
.Object@value <- value
return(.Object)
} else {
stop("'time' and 'value' should have the same number of elements")
}
}
)
n <- 10
s <- sts(time = sort(rnorm(n)), value = cumsum(rnorm(n)))
s
setMethod("plot",
"Sts",
function(object,x, y, ...) {
x <- object@time
y <- object@value
plot(x, y, xlab = "time", ylab = "value", ...)
}
)
setMethod("lines",
"Sts",
definition = function(object, x, y, ...) {
x <- object@time
y <- object@value
plot(x, y, xlab = "time", ylab = "value")
lines(x, y, xlab = "time", ylab = "value", type = "l", ...)
}
)
setMethod("points",
"Sts",
function(object, x, y, ...) {
x <- object@time
y <- object@value
plot(x, y, xlab = "time", ylab = "value")
points(x, y, ...)
}
)
s
s1 <- s[1:5] # selekcja po numerze obserwacji
setMethod("[",
"Sts",
function(object, i) {
cat("yo", object)
class(object)
is.na(object)
}
)
setMethod("[",
"Sts",
function(object, i) {
cat("yo", object)
class(object)
is.na(object)
}
)
setMethod("[",
"Sts",
function(x, i) {
cat("yo", object)
class(object)
is.na(object)
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
setMethod("[",
"Sts",
function(x, object, i) {
cat("yo", object)
class(object)
is.na(object)
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
setMethod("[",
"Sts",
function(x, object, i) {
cat("yo", object, x)
class(object)
is.na(object)
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
setMethod("[",
"Sts",
function(x, object, i, j) {
cat("yo", object, x)
class(object)
is.na(object)
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
s1
setMethod("[",
"Sts",
function(x, object, i, j) {
cat("yo", object, x)
class(object)
is.na(object)
object <- object[i:j]
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
s1
setMethod("[",
"Sts",
function(x, object, i, j, ...) {
cat("yo", object, x)
class(object)
is.na(object)
object <- object[i:j]
}
)
setMethod("[",
"Sts",
function(x, object, i) {
cat("yo", object, x)
class(object)
is.na(object)
object <- object[i:j]
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
n <- 10
s <- sts(time = sort(rnorm(n)), value = cumsum(rnorm(n)))
s
setMethod("initialize",
signature = "Sts",
definition = function(.Object, time, value){
if(length(time) == length(value)){
.Object@time <- time
.Object@value <- value
return(.Object)
} else {
stop("'time' and 'value' should have the same number of elements")
}
}
)
sts <- setClass("Sts",
slots = c(time = "numeric",
value = "numeric"),
contains = "data.frame")
setMethod("[",
"Sts",
function(x, i) {
cat("yo", object, x)
class(object)
is.na(object)
object <- object[i:j]
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
n <- 10
s <- sts(time = sort(rnorm(n)), value = cumsum(rnorm(n)))
s
s1 <- s[1:5] # selekcja po numerze obserwacji
setMethod("[",
"Sts",
function(x, i) {
cat("yo", x)
class(x)
is.na(x)
x <- x[i]
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
setMethod("[",
"Sts",
function(object, i) {
cat("yo", x)
class(x)
is.na(x)
x <- x[i]
}
)
setMethod("[",
"Sts",
function(object,x, i) {
cat("yo", x)
class(x)
is.na(x)
x <- x[i]
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
setMethod("[",
"Sts",
function(object,x, i) {
cat("yo", x)
class(x)
is.na(x)
x <- x[i]
}
)
s1 <- s[1:5] # selekcja po numerze obserwacji
s1
s1 <- s[1:3] # selekcja po numerze obserwacji
s1
class(s1)
setMethod("[",
"Sts",
function(object,x, i) {
object
cat("yo", x)
class(x)
is.na(x)
x <- x[i]
}
)
s1 <- s[1:3] # selekcja po numerze obserwacji
s1
class(s1)
setMethod("[",
"Sts",
function(object,x, i) {
object
cat("yo", x)
}
)
s1 <- s[1:3] # selekcja po numerze obserwacji
s1
object <- object
setMethod("[",
"Sts",
function(object ,x, i) {
object
cat("yo", x)
object <- object
}
)
s1 <- s[1:3] # selekcja po numerze obserwacji
s1
setMethod("[",
"Sts",
function(object ,x, i) {
object
cat("yo", x)
# object <- object
object@value <- object@value[i]
object@time <- object@time[i]
}
)
s1 <- s[1:3] # selekcja po numerze obserwacji
s1
class(s1)
s1 <- s[1:3] # selekcja po numerze obserwacji
s1
class(s1)
setMethod("[",
"Sts",
function(object ,x, i) {
object
cat("yo", x)
# object <- object
object@value <- object@value[1:3]
object@time <- object@time[1:3]
object
}
)
s1 <- s[1:3] # selekcja po numerze obserwacji
s1
class(s1)
s1
setMethod("[",
"Sts",
function(object ,x, i) {
object
cat("yo", x)
# object@value <- object@value[1:3]
# object@time <- object@time[1:3]
object <- object[1:4]
}
)
s1 <- s[1:3] # selekcja po numerze obserwacji
s1
